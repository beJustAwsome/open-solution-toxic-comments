project-key: TOX

name: toxic
tags: [ensemble, rnn, predictions]


metric:
  channel: 'Final Validation Score ROC_AUC'
  goal: maximize

#Comment out if not in Cloud Environment
#pip-requirements-file: requirements.txt

exclude:
  - output
  - imgs
  - neptune.log
  - offline_job.log
  - .git
  - .idea
  - .ipynb_checkpoints

parameters:
  # Cloud Environment
#  data_dir:                     /public/toxic_comments
#  embedding_filepath:           /public/models/word2vec/GoogleNews-vectors-negative300.bin
#  single_model_predictions_dir: /public/toxic_comments/single_model_predictions_20180226
#  experiment_dir:               /output/trained_pipelines/rnn_ensemble

  # Local Environment
  data_dir:                     /mnt/ml-team/minerva/toxic/data
  embedding_filepath:           None
  single_model_predictions_dir: /mnt/ml-team/minerva/toxic/single_model_predictions_newest
  experiment_dir:              /mnt/ml-team/minerva/toxic/trained_pipelines/rnn_ensemble

  bad_words_filepath: None
  overwrite: 1
  num_workers: 4
  n_cv_splits: 10

  # Preprocessing
  max_features_char: None #100 for vdcnn, for tfidf something like 20000 should be used
  max_features_word: None
  maxlen_char: None
  maxlen_words: None
  char_ngram_max: None
  drop_punctuation: None # Do I want to preprocess in that way for all models?
  drop_newline: None
  drop_multispaces: None
  all_lower_case: None
  fill_na_with: None
  deduplication_threshold: None
  anonymize: 0
  apostrophes: 0
  use_stopwords: 0

  # Architecture
  filter_nr:
    value: [32,64,128]
  kernel_size: None
  repeat_block:
    value: [1,2]
  dense_size: 256
  repeat_dense:
    value: [0,1]
  max_pooling: 1
  mean_pooling:
    value: [0,1]
  weighted_average_attention: 0
  concat_mode:  'concat'
  trainable_embedding: None
  word_embedding_size: None
  char_embedding_size: None

  # General Architecture
  use_prelu: 0

 # Log Reg Params
  log_reg_c: None
  log_reg_penalty: None
  max_iter: None

  # Ensemble Catboost
  catboost__iterations: None
  catboost__learning_rate: None
  catboost__depth: None
  catboost__l2_leaf_reg: None
  catboost__border_count: None
  catboost__model_size_reg: None
  catboost__rsm: None
  catboost__verbose: None

  # Ensemble Blender
  blender__method: None
  blender__runs: None
  blender__maxiter: None

  # Ensemble XGBoost
  xgboost__objective: None
  xgboost__eval_metric: None
  xgboost__n_estimators: None
  xgboost__learning_rate: None
  xgboost__max_depth: None
  xgboost__min_child_weight: None
  xgboost__gamma: None
  xgboost__subsample: None
  xgboost__colsample_bytree: None
  xgboost__reg_lambda: None
  xgboost__reg_alpha: None

  # Postprocessing
  clipper__lower: None
  clipper__upper: None

  # Training schedule
  epochs_nr: 1000
  batch_size_train: 32
  batch_size_inference: 32
  lr: 0.01
  momentum: None
  gamma: 0.7
  patience: 5
  unfreeze_on_epoch: None

  # Regularization
  batch_norm_first: 0
  use_batch_norm: 0
  dropout_embedding: 0.1
  rnn_dropout: 0.25
  dense_dropout: 0.25
  conv_dropout: None
  dropout_mode: 'simple'
  rnn_kernel_reg_l2: 0.00001
  rnn_recurrent_reg_l2: 0.00001
  rnn_bias_reg_l2: 0.00001
  dense_kernel_reg_l2: 0.00001
  dense_bias_reg_l2: 0.00001
  conv_kernel_reg_l2: None
  conv_bias_reg_l2: None


